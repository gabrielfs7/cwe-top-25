{% extends 'cwe/base.html.twig' %}
{% block solution %}
    <ul>
        <li>Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid</li>
        <li>Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Examples include the Safe C String Library (SafeStr)</li>
    </ul>
{% endblock %}
{% block subcontent %}
<div class="alert alert-info">
    The program copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.

    <p>
    A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer. The simplest type of error, and the most common cause of buffer overflows, is the "classic" case in which the program copies the buffer without restricting how much is copied. Other variants exist, but the existence of a classic overflow strongly suggests that the programmer is not considering even the most basic of security protections.
    </p>
    <p>
        Applicable for:
        <ul>
            <li>C</li>
            <li>C++</li>
            <li>Assembly</li>
        </ul>
    </p>
</div>
Execute the following C programs to see the weakness:
<br/>
<br/>
{% for sampleFile in sampleFiles %}
<div class="well">
    $ {{ sampleFile }}
</div>
{% endfor %}
{% endblock %}